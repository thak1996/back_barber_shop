{
    "openapi": "3.0.0",
    "info": {
        "title": "BarberShop API",
        "description": "Documentation for the BarberShop API",
        "contact": {
            "email": "franklyn_vs_@hotmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Local server"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "operationId": "2dd578ff7aba2721293dac66833b27d1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string"
                                                },
                                                "user": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/forgot-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Send password reset link",
                "operationId": "da27e3923ff357f8610f31cf2cb83224",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reset link sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reset link sent to your email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset password",
                "operationId": "7703a82fcc6647515895149f640b8722",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "token": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "operationId": "68a6108af04af5e3bc1ea68a6c6f1299",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get authenticated user information",
                "operationId": "e18baa7d6dfc432241dca2fc1985ce40",
                "responses": {
                    "200": {
                        "description": "Authenticated user data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "user@example.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh JWT token",
                "operationId": "0c3ea3c61aed881016646810460499e9",
                "responses": {
                    "200": {
                        "description": "Token successfully refreshed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "0903f2e0df1a8857bee538fc055417f0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "token": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/favorite-shops": {
            "post": {
                "tags": [
                    "Favorite Shops"
                ],
                "summary": "Adicionar loja aos favoritos",
                "operationId": "56389f8c0f1713a79082eae7e37004cd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "shop_id"
                                ],
                                "properties": {
                                    "shop_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Loja adicionada aos favoritos com sucesso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Added to favorites"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Loja já está nos favoritos"
                    },
                    "404": {
                        "description": "Loja não encontrada"
                    },
                    "422": {
                        "description": "Erro de validação"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/favorite-shops/{shop}": {
            "delete": {
                "tags": [
                    "Favorite Shops"
                ],
                "summary": "Remover loja dos favoritos",
                "operationId": "f53e4f0da029d4c6a2cfae3063c86ce0",
                "parameters": [
                    {
                        "name": "shop",
                        "in": "path",
                        "description": "ID da loja",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Loja removida dos favoritos com sucesso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Removed from favorites"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Loja não encontrada nos favoritos"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/shops/{shop}/reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get all reviews for a shop",
                "operationId": "f7da2cd3b617b836a2b0d8d81e40cf50",
                "parameters": [
                    {
                        "name": "shop",
                        "in": "path",
                        "description": "Shop ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of reviews",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Review"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Shop not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Create a new review for a shop",
                "operationId": "2d12b54e7357df812dab2422bf337d6e",
                "parameters": [
                    {
                        "name": "shop",
                        "in": "path",
                        "description": "Shop ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating",
                                    "type"
                                ],
                                "properties": {
                                    "rating": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 4.5
                                    },
                                    "comment": {
                                        "type": "string",
                                        "example": "Great service!"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "good",
                                            "neutral",
                                            "bad"
                                        ],
                                        "example": "good"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Shop not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/shops/{shop}/reviews/{review}": {
            "put": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Update a review",
                "operationId": "7b421853c1aa600feab295f7074b7fe7",
                "parameters": [
                    {
                        "name": "shop",
                        "in": "path",
                        "description": "Shop ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "review",
                        "in": "path",
                        "description": "Review ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rating": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 4.5
                                    },
                                    "comment": {
                                        "type": "string",
                                        "example": "Updated review comment"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "good",
                                            "neutral",
                                            "bad"
                                        ],
                                        "example": "good"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Review not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/shops": {
            "get": {
                "tags": [
                    "Shops"
                ],
                "summary": "Lista todas as barbearias",
                "operationId": "16f2967ba4e0c66824be1862e3ca3438",
                "responses": {
                    "200": {
                        "description": "Lista de barbearias"
                    }
                }
            },
            "post": {
                "tags": [
                    "Shops"
                ],
                "summary": "Cria uma nova barbearia (apenas ADMIN)",
                "operationId": "bf1ecbd2dd07c06d915c0a5480a6c4d3",
                "responses": {
                    "201": {
                        "description": "Barbearia criada com sucesso"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/shops/{id}": {
            "get": {
                "tags": [
                    "Shops"
                ],
                "summary": "Mostra detalhes de uma barbearia",
                "operationId": "722d75f836f7cfe561d0033a8a14986a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detalhes da barbearia"
                    }
                }
            },
            "put": {
                "tags": [
                    "Shops"
                ],
                "summary": "Atualiza uma barbearia (ADMIN ou própria barbearia)",
                "operationId": "5fdfbbcc6843c5b90dc7f7820dde3061",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Barbearia atualizada com sucesso"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Shops"
                ],
                "summary": "Remove uma barbearia (apenas ADMIN)",
                "operationId": "708ed70ac0a9ab3e4b97025b4cf4e9f3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Barbearia removida com sucesso"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shops/{shop}/hours": {
            "get": {
                "tags": [
                    "Shop Hours"
                ],
                "summary": "Get shop hours",
                "operationId": "0ec52dfc62b2bd31c887bb02e5fdd1b1",
                "parameters": [
                    {
                        "name": "shop",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of shop hours",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShopHour"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Shop Hours"
                ],
                "summary": "Create shop hours",
                "operationId": "1b281e15b82fe7e89f54ef1077e397ab",
                "parameters": [
                    {
                        "name": "shop",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShopHourRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Shop hours created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShopHour"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/shops/{shop}/hours/{hour}": {
            "put": {
                "tags": [
                    "Shop Hours"
                ],
                "summary": "Update shop hours",
                "operationId": "50624485ee405d5d205fec6acc5a6476",
                "parameters": [
                    {
                        "name": "shop",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "hour",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShopHourRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Shop hours updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShopHour"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Shop Hours"
                ],
                "summary": "Delete shop hours",
                "operationId": "b755ef5ec64a41fe016d02006292b932",
                "parameters": [
                    {
                        "name": "shop",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "hour",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shop hours deleted successfully"
                    }
                }
            }
        },
        "/api/shops/{shop}/reservations": {
            "get": {
                "tags": [
                    "Shop Reservations"
                ],
                "summary": "Get all reservations for a shop",
                "operationId": "a89af9ca420fd184ab30d6c06011c74f",
                "parameters": [
                    {
                        "name": "shop",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of shop reservations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reservation"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/shops/{shop}/reservations/{reservation}": {
            "put": {
                "tags": [
                    "Shop Reservations"
                ],
                "summary": "Update reservation status",
                "operationId": "b833fdfc6c4bad0305f4463ef4f7a2ab",
                "parameters": [
                    {
                        "name": "shop",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reservation",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReservationStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reservation updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/shops/{shop}/available-slots": {
            "get": {
                "tags": [
                    "Shop Reservations"
                ],
                "summary": "Get available reservation slots for a date",
                "operationId": "bc8b0429784648103a4028642c9c19af",
                "parameters": [
                    {
                        "name": "shop",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available slots",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "time"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/shops/{shop}/services": {
            "get": {
                "tags": [
                    "Shop Services"
                ],
                "summary": "Get all services for a shop",
                "operationId": "7bba263a4d3258ea909fb0c47d3dadbc",
                "parameters": [
                    {
                        "name": "shop",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of shop services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShopService"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Shop Services"
                ],
                "summary": "Add a service to shop",
                "operationId": "54eb24122cef746b8b7511b2a08c4d77",
                "parameters": [
                    {
                        "name": "shop",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShopServiceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShopService"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/shops/{shop}/services/{service}": {
            "put": {
                "tags": [
                    "Shop Services"
                ],
                "summary": "Update service price",
                "operationId": "1867616c76f51f9f9fe7125e15eec2a1",
                "parameters": [
                    {
                        "name": "shop",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShopServiceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service price updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShopService"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Shop Services"
                ],
                "summary": "Remove service from shop",
                "operationId": "3ccf69808ea4ec59082c1179937d40a6",
                "parameters": [
                    {
                        "name": "shop",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "service",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service removed successfully"
                    }
                }
            }
        },
        "/api/user/reservations": {
            "get": {
                "tags": [
                    "User Reservations"
                ],
                "summary": "Get all reservations for the authenticated user",
                "operationId": "cf3390bc2d003c7eed7018666d44fd74",
                "responses": {
                    "200": {
                        "description": "List of user reservations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reservation"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User Reservations"
                ],
                "summary": "Create a new reservation",
                "operationId": "fbb158ecd249fd14c9c5cb848da4d0c1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreReservationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Reservation created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/reservations/{reservation}": {
            "put": {
                "tags": [
                    "User Reservations"
                ],
                "summary": "Update a reservation",
                "operationId": "bfe7a59b4e2c233823556aae61dab4b6",
                "parameters": [
                    {
                        "name": "reservation",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReservationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reservation updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User Reservations"
                ],
                "summary": "Delete a reservation",
                "operationId": "d1663516cd304ff81a5a8c7408d9da78",
                "parameters": [
                    {
                        "name": "reservation",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation deleted successfully"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RegisterRequest": {
                "title": "RegisterRequest",
                "description": "User registration request validation",
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+5511999999999"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "city": {
                        "type": "string",
                        "example": "São Paulo"
                    },
                    "state": {
                        "type": "string",
                        "example": "SP"
                    },
                    "zip_code": {
                        "type": "string",
                        "example": "01234-567"
                    },
                    "country": {
                        "type": "string",
                        "example": "Brazil"
                    }
                },
                "type": "object"
            },
            "ShopHourRequest": {
                "title": "ShopHourRequest",
                "description": "Shop hour request validation",
                "required": [
                    "weekday",
                    "open_time",
                    "close_time"
                ],
                "properties": {
                    "weekday": {
                        "description": "0 = Sunday, 1 = Monday, ..., 6 = Saturday",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "open_time": {
                        "type": "string",
                        "format": "time",
                        "example": "09:00:00"
                    },
                    "close_time": {
                        "type": "string",
                        "format": "time",
                        "example": "18:00:00"
                    },
                    "lunch_start": {
                        "type": "string",
                        "format": "time",
                        "example": "12:00:00"
                    },
                    "lunch_end": {
                        "type": "string",
                        "format": "time",
                        "example": "13:00:00"
                    },
                    "is_closed": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "ShopServiceRequest": {
                "title": "ShopServiceRequest",
                "description": "Shop service request validation",
                "required": [
                    "name",
                    "duration",
                    "price"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Haircut"
                    },
                    "description": {
                        "type": "string",
                        "example": "Basic haircut service"
                    },
                    "duration": {
                        "description": "Duration in minutes",
                        "type": "integer",
                        "format": "int32",
                        "example": 30
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 25
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "StoreReservationRequest": {
                "title": "StoreReservationRequest",
                "description": "Store reservation request validation",
                "required": [
                    "shop_id",
                    "scheduled_at"
                ],
                "properties": {
                    "shop_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "scheduled_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-03-20 14:30:00"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Please bring your own towel"
                    }
                },
                "type": "object"
            },
            "UpdateReservationRequest": {
                "title": "UpdateReservationRequest",
                "description": "Update reservation request validation",
                "properties": {
                    "scheduled_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-03-20 14:30:00"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Please bring your own towel"
                    }
                },
                "type": "object"
            },
            "UpdateReservationStatusRequest": {
                "title": "UpdateReservationStatusRequest",
                "description": "Update reservation status request validation",
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "confirmed",
                            "cancelled",
                            "completed"
                        ],
                        "example": "confirmed"
                    }
                },
                "type": "object"
            },
            "Reservation": {
                "title": "Reservation",
                "description": "Reservation model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "shop_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "service_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "scheduled_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-03-20 14:30:00"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "confirmed",
                            "cancelled",
                            "completed"
                        ],
                        "example": "pending"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Please bring your own towel"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Review": {
                "title": "Review",
                "description": "Review model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "shop_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "rating": {
                        "type": "integer",
                        "format": "int32",
                        "example": 5
                    },
                    "comment": {
                        "type": "string",
                        "example": "Great service!"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "good",
                            "neutral",
                            "bad"
                        ],
                        "example": "good"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ShopHour": {
                "title": "ShopHour",
                "description": "Shop operating hours model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "shop_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "weekday": {
                        "description": "0 = Sunday, 1 = Monday, ..., 6 = Saturday",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "open_time": {
                        "type": "string",
                        "format": "time",
                        "example": "09:00:00"
                    },
                    "close_time": {
                        "type": "string",
                        "format": "time",
                        "example": "18:00:00"
                    },
                    "lunch_start": {
                        "type": "string",
                        "format": "time",
                        "example": "12:00:00"
                    },
                    "lunch_end": {
                        "type": "string",
                        "format": "time",
                        "example": "13:00:00"
                    },
                    "is_closed": {
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ShopService": {
                "title": "ShopService",
                "description": "Shop service model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "shop_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Haircut"
                    },
                    "description": {
                        "type": "string",
                        "example": "Basic haircut service"
                    },
                    "duration": {
                        "description": "Duration in minutes",
                        "type": "integer",
                        "format": "int32",
                        "example": 30
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 25
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+5511999999999"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "city": {
                        "type": "string",
                        "example": "São Paulo"
                    },
                    "state": {
                        "type": "string",
                        "example": "SP"
                    },
                    "zip_code": {
                        "type": "string",
                        "example": "01234-567"
                    },
                    "country": {
                        "type": "string",
                        "example": "Brazil"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "user",
                            "shop"
                        ],
                        "example": "user"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication endpoints"
        },
        {
            "name": "Favorite Shops",
            "description": "Endpoints para gerenciar lojas favoritas"
        },
        {
            "name": "Reviews",
            "description": "Shop review management endpoints"
        },
        {
            "name": "Shops",
            "description": "Endpoints para gerenciamento de barbearias"
        },
        {
            "name": "Shop Hours",
            "description": "Shop hours management endpoints"
        },
        {
            "name": "Shop Reservations",
            "description": "Shop reservations management endpoints"
        },
        {
            "name": "Shop Services",
            "description": "Shop services management endpoints"
        },
        {
            "name": "User Reservations",
            "description": "User reservations management endpoints"
        }
    ]
}