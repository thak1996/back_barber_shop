version: '3.8'

services:
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: ${APP_NAME}-app
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - .:/var/www/html
    depends_on:
      - db
    networks:
      - app-network
    environment:
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}

  web:
    image: nginx:alpine
    container_name: ${APP_NAME}-web
    ports:
      - "${APP_PORT:-8000}:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - app-network

  db:
    image: mysql:5.7
    container_name: ${APP_NAME}-db
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog
    container_name: ${APP_NAME}-mailhog
    ports:
      - "${MAIL_PORT:-1025}:1025"
      - "${MAIL_PORT_TWO:-8025}:8025"
    networks:
      - app-network

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ${APP_NAME}-ngrok
    command: http web:80
    depends_on:
      - web
    ports:
      - "4040:4040"
    networks:
      - app-network
    environment:
      - NGROK_AUTHTOKEN=${NGROK_TOKEN}

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
